version: "3.1"

services:
  postgres:
    image: postgres:11-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_NON_ROOT_USER: n8n
      POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
      - ${DATA_DIR}/db:/var/lib/postgresql/data

  app:
    build: docker
    # Wait 5 seconds to start n8n to make sure that PostgreSQL is ready
    # when n8n tries to connect to it
    command: /bin/sh -c "sleep 5; n8n start"
    restart: unless-stopped
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
      N8N_EMAIL_MODE: smtp
      N8N_SMTP_SSL: "false"
      N8N_SMTP_HOST: ${N8N_SMTP_HOST}
      N8N_SMTP_PORT: ${N8N_SMTP_PORT}
      N8N_SMTP_USER: ${N8N_SMTP_USER}
      N8N_SMTP_PASS: ${N8N_SMTP_PASS}
      N8N_SMTP_SENDER: ${N8N_SMTP_SENDER}
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL}
      NODE_FUNCTION_ALLOW_BUILTIN: ${NODE_FUNCTION_ALLOW_BUILTIN}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
      WEBHOOK_TUNNEL_URL: ${WEBHOOK_TUNNEL_URL}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
    volumes:
      - ${DATA_DIR}/app:/root/.n8n
      - ${DATA_DIR}/data:/data
    networks:
      - default
      - webproxy
    depends_on:
      - postgres

networks:
  webproxy:
    name: ${NETWORK:-webproxy}
    external: true
